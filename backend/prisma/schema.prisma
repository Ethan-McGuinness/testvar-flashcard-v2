// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") 
}

model User {
  id       Int           @id @default(autoincrement())
  username String        @unique
  password  String       
  admin    Boolean       @default(false)
  flashcardSets FlashcardSet[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  Comment Comment[]
  Collection Collection[]
}

model FlashcardSet {
  id        Int           @id @default(autoincrement())
  name      String
  userId    Int
  user      User          @relation(fields: [userId], references: [id])
  flashcards Flashcard[]
  isPublic Boolean        @default(true)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now()) @updatedAt
  Collection Collection[]
  Comment Comment[]
}

model Flashcard {
  id           Int           @id @default(autoincrement())
  question     String
  answer       String
  difficulty   String
  hiddenState  Boolean       @default(false)
  flashcardSet FlashcardSet  @relation(fields: [flashcardSetId], references: [id])
  flashcardSetId Int
  isPublic Boolean        @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
}

model Collection {
  id           Int           @id @default(autoincrement())
  title        String
  userId       Int        
  user         User          @relation(fields: [userId], references: [id]) 
  flashcardSets FlashcardSet[]
  isPublic Boolean        @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
}

model Comment {
  id           Int           @id @default(autoincrement())
  comment      String
  setId        Int
  set          FlashcardSet  @relation(fields: [setId], references: [id])
  authorId     Int
  author       User          @relation(fields: [authorId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
}

